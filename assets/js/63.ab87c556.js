(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{379:function(n,e,l){"use strict";l.r(e);var a=l(8),t=Object(a.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("ul",[e("li",[e("p",[n._v("通过接口类名获取bean时，若存在实体类的bean，那么会将该实体类的bean返回")])]),n._v(" "),e("li",[e("p",[n._v("在使用xml方式管理bean的时候，bean有一个默认的id，id的默认值为类的全类名加#数字，如com.qls.Hello#0")])]),n._v(" "),e("li",[e("p",[n._v("在用注解的方式管理bean的时候，bean的默认id为类名首字母小写")])]),n._v(" "),e("li",[e("p",[n._v("在使用了Spring中的AOP之后，即使为实现类设置了注解，也获取不到这个bean，而需要通过代理对象来访问这个bean，且获取bean的时候是通过接口的class来获取")])]),n._v(" "),e("li")])])}),[],!1,null,null,null);e.default=t.exports}}]);