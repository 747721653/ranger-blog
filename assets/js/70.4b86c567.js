(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{387:function(r,v,t){"use strict";t.r(v);var e=t(7),n=Object(e.a)({},(function(){var r=this,v=r._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[v("h2",{attrs:{id:"什么是mvc"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是mvc"}},[r._v("#")]),r._v(" 什么是MVC")]),r._v(" "),v("p",[r._v("MVC是一种软件架构的思想，将软件按照模型（model）、视图（view）、控制器（controller）来划分。")]),r._v(" "),v("p",[v("strong",[r._v("M：Model")]),r._v("，模型层，指工程中的JavaBean（和Spring中的Bean不一样），作用是处理数据")]),r._v(" "),v("p",[r._v("有两种JavaBean：")]),r._v(" "),v("ul",[v("li",[r._v("实体类Bean：专门存储业务数据，如Student、User")]),r._v(" "),v("li",[r._v("业务处理Bean：Service、Dao（Mapper）对象，专门用于处理业务逻辑和数据访问")])]),r._v(" "),v("p",[v("strong",[r._v("V：View")]),r._v("，视图层，指工程中的html、jsp等页面，主要作用是与用户交互，展示数据")]),r._v(" "),v("p",[v("strong",[r._v("C：Controller")]),r._v("，控制层，即工程中的servlet，作用是接收请求和响应浏览器")]),r._v(" "),v("p",[v("strong",[r._v("MVC的工作流程")]),r._v("：")]),r._v(" "),v("p",[r._v("用户通过视图层发送请求到服务器，在服务器中请求被Controller接收，Controller调用相应的Model层处理请求（即Mapper、Service），处理完毕后将结果返回到Controller，Controller再根据请求处理的结果找到相应的View视图，渲染数据后最终响应给浏览器")]),r._v(" "),v("h2",{attrs:{id:"什么是springmvc"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是springmvc"}},[r._v("#")]),r._v(" 什么是SpringMVC")]),r._v(" "),v("p",[r._v("是Spring的后续产品，是Spring的一个子项目")]),r._v(" "),v("p",[r._v("SpringMVC是Spring为表述层开发提供的一整套完备的解决方案。")]),r._v(" "),v("blockquote",[v("p",[r._v("注：三层架构分为表述层（或表示层，页面）、业务逻辑层、数据访问层（持久层，数据持久化），表述层表示前台页面和后台servlet")])]),r._v(" "),v("h2",{attrs:{id:"springmvc的特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#springmvc的特点"}},[r._v("#")]),r._v(" SpringMVC的特点")]),r._v(" "),v("ul",[v("li",[r._v("Spring家族原生产品，与IOC容器等基础设施无缝对接")]),r._v(" "),v("li",[r._v("基于原生的Servlet，通过了")])])])}),[],!1,null,null,null);v.default=n.exports}}]);