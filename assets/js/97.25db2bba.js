(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{414:function(t,s,a){"use strict";a.r(s);var n=a(7),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-依赖管理机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-依赖管理机制"}},[t._v("#")]),t._v(" 1. 依赖管理机制")]),t._v(" "),s("p",[t._v("思考：")]),t._v(" "),s("p",[t._v("1、为什么导入"),s("code",[t._v("starter-web")]),t._v("所有相关依赖都导入进来？")]),t._v(" "),s("ul",[s("li",[t._v("开发什么场景，导入什么"),s("strong",[t._v("场景启动器。")])]),t._v(" "),s("li",[s("strong",[t._v("maven依赖传递原则。A-B-C：A就拥有B和C")])]),t._v(" "),s("li",[t._v("导入场景启动器。场景启动器自动把这个场景的所有核心依赖全部导入进来")])]),t._v(" "),s("p",[t._v("2、为什么版本号都不用写？")]),t._v(" "),s("ul",[s("li",[t._v("每个boot项目都有一个父项目"),s("code",[t._v("spring-boot-starter-parent")])]),t._v(" "),s("li",[t._v("parent的父项目是"),s("code",[t._v("spring-boot-dependencies")])]),t._v(" "),s("li",[t._v("父项目 "),s("strong",[t._v("版本仲裁中心")]),t._v("，把所有常见的jar的依赖版本都声明好了。")]),t._v(" "),s("li",[t._v("比如："),s("code",[t._v("mysql-connector-j")])])]),t._v(" "),s("p",[t._v("3、自定义版本号")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("利用maven的就近原则")]),t._v(" "),s("ul",[s("li",[t._v("直接在当前项目"),s("code",[t._v("properties")]),t._v("标签中声明父项目用的版本属性的key")])]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("properties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mysql.version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("8.0.31"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("mysql.version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("properties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("ul",[s("li",[t._v("直接在"),s("strong",[t._v("导入依赖的时候声明版本")])])]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.mysql"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("mysql-connector-j"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("8.0.31"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])])])]),t._v(" "),s("p",[t._v("4、第三方的jar包")]),t._v(" "),s("ul",[s("li",[t._v("boot父项目没有管理的需要自行声明好")])]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- https://mvnrepository.com/artifact/com.alibaba/druid --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.alibaba"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("druid"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1.2.16"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/747721653/image-store@master/springboot/image.7j96mqlr0oo0.webp",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"_2-自动配置机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-自动配置机制"}},[t._v("#")]),t._v(" 2. 自动配置机制")]),t._v(" "),s("h3",{attrs:{id:"_1-初步理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-初步理解"}},[t._v("#")]),t._v(" 1. 初步理解")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("自动配置")]),t._v("的 Tomcat、SpringMVC 等")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("导入场景")]),t._v("，容器中就会自动配置好这个场景的核心组件。")])])]),t._v(" "),s("li",[s("p",[t._v("以前：DispatcherServlet、ViewResolver、CharacterEncodingFilter....")])]),t._v(" "),s("li",[s("p",[t._v("现在：自动配置好的这些组件")])]),t._v(" "),s("li",[s("p",[t._v("验证："),s("strong",[t._v("容器中有了什么组件，就具有什么功能")])])])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//java10： 局部变量类型的自动推断，明确知道右边返回值类型时可以使用，会自动将类型赋给变量")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ioc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MainApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1、获取容器中所有组件的名字")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" names "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ioc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBeanDefinitionNames")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2、挨个遍历：")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dispatcherServlet、beanNameViewResolver、characterEncodingFilter、multipartResolver")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SpringBoot把以前配置的核心组件现在都给我们自动配置好了。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" names"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("ul",[s("li",[s("p",[s("strong",[t._v("默认的包扫描规则")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("@SpringBootApplication")]),t._v(" 标注的类就是主程序类")])]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("SpringBoot只会扫描主程序所在的包及其下面的子包，自动的component-scan功能")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("自定义扫描路径")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v('@SpringBootApplication(scanBasePackages = "com.atguigu")')])]),t._v(" "),s("li",[s("p",[s("code",[t._v('@ComponentScan("com.atguigu")')]),t._v(" 直接指定扫描的路径")])])])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("配置默认值")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("配置文件")]),t._v("的所有配置项是和某个"),s("strong",[t._v("类的对象")]),t._v("值进行一一绑定的。")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("绑定了配置文件中每一项值的类： "),s("strong",[t._v("属性类")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("比如：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("ServerProperties")]),t._v("绑定了所有Tomcat服务器有关的配置")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("MultipartProperties")]),t._v("绑定了所有文件上传相关的配置")])]),t._v(" "),s("li",[s("p",[t._v("....参照"),s("a",{attrs:{href:"https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties.server",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1),t._v("：或者参照 绑定的  "),s("strong",[t._v("属性类")]),t._v("。")])])])])])]),t._v(" "),s("li",[s("p",[t._v("按需加载自动配置")]),t._v(" "),s("ul",[s("li",[t._v("导入场景"),s("code",[t._v("spring-boot-starter-web")])])]),t._v(" "),s("ul",[s("li",[t._v("场景启动器除了会导入相关功能依赖，导入一个"),s("code",[t._v("spring-boot-starter")]),t._v("，是所有"),s("code",[t._v("starter")]),t._v("的"),s("code",[t._v("starter")]),t._v("，基础核心starter")]),t._v(" "),s("li",[s("code",[t._v("spring-boot-starter")]),t._v("导入了一个包 "),s("code",[t._v("spring-boot-autoconfigure")]),t._v("。包里面都是各种场景的"),s("code",[t._v("AutoConfiguration")]),s("strong",[t._v("自动配置类")])]),t._v(" "),s("li",[t._v("虽然全场景的自动配置都在 "),s("code",[t._v("spring-boot-autoconfigure")]),t._v("这个包，但是不是全都开启的。\n"),s("ul",[s("li",[t._v("导入哪个场景就开启哪个自动配置")])])])])])]),t._v(" "),s("p",[t._v("总结： 导入场景启动器、触发 "),s("code",[t._v("spring-boot-autoconfigure")]),t._v("这个包的自动配置生效、容器中就会具有相关场景的功能")]),t._v(" "),s("h3",{attrs:{id:"_2-完整流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-完整流程"}},[t._v("#")]),t._v(" 2. 完整流程")]),t._v(" "),s("p",[t._v("思考：")]),t._v(" "),s("p",[s("strong",[t._v("1、SpringBoot怎么实现导一个")]),s("code",[t._v("**starter**")]),s("strong",[t._v("、写一些简单配置，应用就能跑起来，我们无需关心整合")])]),t._v(" "),s("p",[t._v("2、为什么Tomcat的端口号可以配置在"),s("code",[t._v("application.properties")]),t._v("中，并且"),s("code",[t._v("Tomcat")]),t._v("能启动成功？")]),t._v(" "),s("p",[t._v("3、导入场景后哪些"),s("strong",[t._v("自动配置能生效")]),t._v("？")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/747721653/image-store@master/springboot/image.4qwxm58bjs40.webp",alt:"image"}})]),t._v(" "),s("p",[s("em",[s("strong",[t._v("自动配置流程细节梳理：")])])]),t._v(" "),s("p",[s("strong",[t._v("1、导入"),s("code",[t._v("starter-web")]),t._v("：导入了web开发场景")])]),t._v(" "),s("ul",[s("li",[t._v("1、场景启动器导入了相关场景的所有依赖："),s("code",[t._v("starter-json")]),t._v("、"),s("code",[t._v("starter-tomcat")]),t._v("、"),s("code",[t._v("springmvc")])]),t._v(" "),s("li",[t._v("2、每个场景启动器都引入了一个"),s("code",[t._v("spring-boot-starter")]),t._v("，核心场景启动器。")]),t._v(" "),s("li",[t._v("3、"),s("strong",[t._v("核心场景启动器")]),t._v("引入了"),s("code",[t._v("spring-boot-autoconfigure")]),t._v("包。")]),t._v(" "),s("li",[t._v("4、"),s("code",[t._v("spring-boot-autoconfigure")]),t._v("里面囊括了所有场景的所有配置。")]),t._v(" "),s("li",[t._v("5、只要这个包下的所有类都能生效，那么相当于SpringBoot官方写好的整合功能就生效了。")]),t._v(" "),s("li",[t._v("6、SpringBoot默认却扫描不到 "),s("code",[t._v("spring-boot-autoconfigure")]),t._v("下写好的所有"),s("strong",[t._v("配置类")]),t._v("。（这些"),s("strong",[t._v("配置类")]),t._v("给我们做了整合操作），"),s("strong",[t._v("默认只扫描主程序所在的包")]),t._v("。")])]),t._v(" "),s("p",[s("strong",[t._v("2、主程序："),s("code",[t._v("@SpringBootApplication")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("1、"),s("code",[t._v("@SpringBootApplication")]),t._v("由三个注解组成"),s("code",[t._v("@SpringBootConfiguration")]),t._v("、"),s("code",[t._v("@EnableAutoConfiguratio")]),t._v("、"),s("code",[t._v("@ComponentScan")])])]),t._v(" "),s("li",[s("p",[t._v("2、SpringBoot默认只能扫描自己主程序所在的包及其下面的子包，扫描不到"),s("code",[t._v("spring-boot-autoconfigure")]),t._v("包中官方写好的"),s("strong",[t._v("配置类")])])]),t._v(" "),s("li",[s("p",[t._v("3、"),s("code",[t._v("@EnableAutoConfiguration")]),t._v("：SpringBoot "),s("strong",[t._v("开启自动配置的核心")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("1、是由"),s("code",[t._v("@Import(AutoConfigurationImportSelector.class)")]),t._v("提供功能：批量给容器中导入组件。")]),t._v(" "),s("li",[t._v("2、SpringBoot启动会默认加载142个配置类。")]),t._v(" "),s("li",[t._v("3、这"),s("strong",[t._v("142个配置类")]),t._v("来自于"),s("code",[t._v("spring-boot-autoconfigure")]),t._v("下 "),s("code",[t._v("META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports")]),t._v("文件指定的")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/747721653/image-store@master/springboot/image.qa5nqx3bubk.webp",alt:"image"}})]),t._v(" "),s("ul",[s("li",[t._v("项目启动的时候利用 @Import 批量导入组件机制把 "),s("code",[t._v("autoconfigure")]),t._v(" 包下的142 "),s("code",[t._v("xxxxAutoConfiguration")]),t._v("类导入进来（"),s("strong",[t._v("自动配置类")]),t._v("）")]),t._v(" "),s("li",[t._v("虽然导入了"),s("code",[t._v("142")]),t._v("个自动配置类，但它们是按需生效")])])]),t._v(" "),s("li",[s("p",[t._v("4、按需生效：")]),t._v(" "),s("ul",[s("li",[t._v("并不是这"),s("code",[t._v("142")]),t._v("个自动配置类都能生效")]),t._v(" "),s("li",[t._v("每一个自动配置类，都有条件注解"),s("code",[t._v("@ConditionalOnxxx")]),t._v("，只有条件成立，才能生效")])])])]),t._v(" "),s("p",[s("strong",[t._v("3、")]),s("code",[t._v("xxxxAutoConfiguration")]),s("strong",[t._v("自动配置类")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("1、给容器中使用@Bean放一堆组件。")])]),t._v(" "),s("li",[t._v("2、每个"),s("strong",[t._v("自动配置类")]),t._v("都可能有这个注解"),s("code",[t._v("@EnableConfigurationProperties(ServerProperties.class)")]),t._v("，用来把配置文件中配的指定前缀的属性值封装到 "),s("code",[t._v("xxxProperties")]),s("strong",[t._v("属性类")]),t._v("中")]),t._v(" "),s("li",[t._v("3、以Tomcat为例：把服务器的所有配置都是以"),s("code",[t._v("server")]),t._v("开头的。配置都封装到了属性类中。")]),t._v(" "),s("li",[t._v("4、给"),s("strong",[t._v("容器")]),t._v("中放的所有"),s("strong",[t._v("组件")]),t._v("的一些"),s("strong",[t._v("核心参数")]),t._v("，都来自于"),s("code",[t._v("xxxProperties")]),s("strong",[t._v("。")]),s("code",[t._v("xxxProperties")]),s("strong",[t._v("都是和配置文件绑定。")])]),t._v(" "),s("li",[s("strong",[t._v("只需要改配置文件的值，核心组件的底层参数都能修改")])])]),t._v(" "),s("p",[s("strong",[t._v("4、写业务，全程无需关心各种整合（底层这些整合写好了，而且也生效了）")])]),t._v(" "),s("p",[s("strong",[t._v("核心流程总结：")])]),t._v(" "),s("p",[t._v("1、导入"),s("code",[t._v("starter")]),t._v("，就会导入"),s("code",[t._v("autoconfigure")]),t._v("包。")]),t._v(" "),s("p",[t._v("2、"),s("code",[t._v("autoconfigure")]),t._v(" 包里面有一个文件 "),s("code",[t._v("META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports")]),t._v(",里面指定的所有启动要加载的自动配置类")]),t._v(" "),s("p",[t._v("3、"),s("code",[t._v("@EnableAutoConfiguration")]),t._v("会自动的把上面文件里面写的所有"),s("strong",[t._v("自动配置类都导入进来。xxxAutoConfiguration 是有条件注解进行按需加载")])]),t._v(" "),s("p",[t._v("4、"),s("code",[t._v("xxxAutoConfiguration")]),t._v("给容器中导入一堆组件，组件都是从 "),s("code",[t._v("xxxProperties")]),t._v("中提取属性值")]),t._v(" "),s("p",[t._v("5、"),s("code",[t._v("xxxProperties")]),t._v("又是和"),s("strong",[t._v("配置文件")]),t._v("进行了绑定")]),t._v(" "),s("p",[s("strong",[t._v("效果：导入"),s("code",[t._v("starter")]),t._v("、修改配置文件，就能修改底层行为。")])]),t._v(" "),s("h3",{attrs:{id:"_3-如何学好springboot"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何学好springboot"}},[t._v("#")]),t._v(" 3. 如何学好SpringBoot")]),t._v(" "),s("p",[t._v("框架的框架、底层基于Spring。能调整每一个场景的底层行为。100%项目一定会用到"),s("strong",[t._v("底层自定义")])]),t._v(" "),s("p",[t._v("摄影：")]),t._v(" "),s("ul",[s("li",[t._v("傻瓜：自动配置好。")]),t._v(" "),s("li",[s("strong",[t._v("单反")]),t._v("：焦距、光圈、快门、感光度....")]),t._v(" "),s("li",[t._v("SpringBoot=傻瓜+"),s("strong",[t._v("单反")]),t._v("：")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("理解"),s("strong",[t._v("自动配置原理")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("导入starter")]),t._v(" "),s("strong",[t._v("--\x3e 生效xxxxAutoConfiguration --\x3e")]),t._v(" "),s("strong",[t._v("组件")]),t._v(" "),s("strong",[t._v("--\x3e xxxProperties --\x3e")]),t._v(" "),s("strong",[t._v("配置文件")])])]),t._v(" "),s("li",[s("p",[t._v("理解"),s("strong",[t._v("其他框架底层")])])]),t._v(" "),s("li",[s("p",[t._v("拦截器")])]),t._v(" "),s("li",[s("p",[t._v("可以随时"),s("strong",[t._v("定制化任何组件")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("配置文件")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("自定义组件")])])])]),t._v(" "),s("p",[t._v("普通开发："),s("code",[t._v("导入starter")]),t._v("，Controller、Service、Mapper、偶尔修改配置文件")]),t._v(" "),s("p",[s("strong",[t._v("高级开发")]),t._v("：自定义组件、自定义配置、自定义starter")]),t._v(" "),s("p",[t._v("核心：")]),t._v(" "),s("ul",[s("li",[t._v("这个场景自动配置导入了哪些组件，我们能不能Autowired进来使用")]),t._v(" "),s("li",[t._v("能不能通过修改配置改变组件的一些默认参数")]),t._v(" "),s("li",[t._v("需不需要自己完全定义这个组件")]),t._v(" "),s("li",[t._v("场景定制化")])]),t._v(" "),s("p",[s("strong",[t._v("最佳实战")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("选场景")]),t._v("，导入到项目")]),t._v(" "),s("ul",[s("li",[t._v("官方：starter")]),t._v(" "),s("li",[t._v("第三方：去仓库搜")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("写配置，改配置文件关键项")])]),t._v(" "),s("ul",[s("li",[t._v("数据库参数（连接地址、账号密码...）")])])]),t._v(" "),s("li",[s("p",[t._v("分析这个场景给我们导入了"),s("strong",[t._v("哪些能用的组件")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("自动装配")]),t._v("这些组件进行后续使用")]),t._v(" "),s("li",[t._v("不满意boot提供的自动配好的默认组件\n"),s("ul",[s("li",[s("strong",[t._v("定制化")]),t._v(" "),s("ul",[s("li",[t._v("改配置")]),t._v(" "),s("li",[t._v("自定义组件")])])])])])])])]),t._v(" "),s("p",[t._v("整合redis：")]),t._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:"https://docs.spring.io/spring-boot/docs/current/reference/html/using.html#using.build-systems.starters",target:"_blank",rel:"noopener noreferrer"}},[t._v("选场景"),s("OutboundLink")],1),t._v("："),s("code",[t._v("spring-boot-starter-data-redis")])]),t._v(" "),s("ul",[s("li",[t._v("场景AutoConfiguration 就是这个场景的自动配置类")])])]),t._v(" "),s("li",[s("p",[t._v("写配置：")]),t._v(" "),s("ul",[s("li",[t._v("分析到这个场景的自动配置类开启了哪些属性绑定关系")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("@EnableConfigurationProperties(RedisProperties.class)")])]),t._v(" "),s("li",[t._v("修改redis相关的配置")])])]),t._v(" "),s("li",[s("p",[t._v("分析组件：")]),t._v(" "),s("ul",[s("li",[t._v("分析到 "),s("code",[t._v("RedisAutoConfiguration")]),t._v("  给容器中放了 "),s("code",[t._v("StringRedisTemplate")])])]),t._v(" "),s("ul",[s("li",[t._v("给业务代码中自动装配 "),s("code",[t._v("StringRedisTemplate")])])])]),t._v(" "),s("li",[s("p",[t._v("定制化")]),t._v(" "),s("ul",[s("li",[t._v("修改配置文件")])]),t._v(" "),s("ul",[s("li",[t._v("自定义组件，自己给容器中放一个 "),s("code",[t._v("StringRedisTemplate")])])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);